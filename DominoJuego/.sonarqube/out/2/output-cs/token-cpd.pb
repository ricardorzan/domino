ко
DC:\Users\ricar\Documents\GitHub\domino\DominoServer\DominoService.cs
	namespace 	
DominoServer
 
{ 
[ 
ServiceBehavior 
( 
ConcurrencyMode $
=% &
ConcurrencyMode' 6
.6 7
Single7 =
,= >
InstanceContextMode? R
=S T
InstanceContextModeU h
.h i
Singlei o
)o p
]p q
public 

partial 
class 
DominoService &
:' (
ILoginService) 6
,6 7
IMenuService8 D
,D E
IChatServiceF R
,R S
ILobbyServiceT a
,a b
IGameServicec o
{ 
private 
readonly 

Dictionary #
<# $
int$ '
,' (

Dictionary) 3
<3 4
IGameClient4 ?
,? @
stringA G
>G H
>H I
_currentGamesJ W
=X Y
newZ ]

Dictionary^ h
<h i
inti l
,l m

Dictionaryn x
<x y
IGameClient	y Д
,
Д Е
string
Ж М
>
М Н
>
Н О
(
О П
)
П Р
;
Р С
private 
readonly 

Dictionary #
<# $
int$ '
,' (
string) /
[/ 0
]0 1
>1 2
	_dominoes3 <
== >
new? B

DictionaryC M
<M N
intN Q
,Q R
stringS Y
[Y Z
]Z [
>[ \
(\ ]
)] ^
;^ _
public 
void 
JoinCurrentGame #
(# $
int$ '
idGame( .
,. /
string0 6
username7 ?
)? @
{ 	
var 

connection 
= 
OperationContext -
.- .
Current. 5
.5 6
GetCallbackChannel6 H
<H I
IGameClientI T
>T U
(U V
)V W
;W X
if   
(   
!   
_currentGames   
.   
TryGetValue   *
(  * +
idGame  + 1
,  1 2
out  3 6

Dictionary  7 A
<  A B
IGameClient  B M
,  M N
string  O U
>  U V
_members  W _
)  _ `
)  ` a
return!! 
;!! 
int## 

nextMember## 
=## 
$num## 
;## 
string$$ 
[$$ 
]$$ 
members$$ 
=$$ 
new$$ "
string$$# )
[$$) *
_members$$* 2
.$$2 3
Count$$3 8
]$$8 9
;$$9 :
foreach%% 
(%% 
var%% 
other%% 
in%% !
_members%%" *
)%%* +
{&& 
if'' 
('' 
other'' 
.'' 
Key'' 
==''  

connection''! +
)''+ ,
{(( 

nextMember)) 
++))  
;))  !
continue** 
;** 
}++ 
members,, 
[,, 

nextMember,, "
],," #
=,,$ %
other,,& +
.,,+ ,
Value,,, 1
;,,1 2

nextMember-- 
++-- 
;-- 
other.. 
... 
Key.. 
... 
ReciveNewMember.. )
(..) *
username..* 2
)..2 3
;..3 4
}// 
_currentGames00 
[00 
idGame00  
]00  !
.00! "
Add00" %
(00% &

connection00& 0
,000 1
username002 :
)00: ;
;00; <
try11 
{22 

connection33 
.33 
ReciveMembersInGame33 .
(33. /
members33/ 6
)336 7
;337 8
}44 
catch55 
(55 
	Exception55 
ex55 
)55  
{66 
throw77 
new77 
FaultException77 (
(77( )
ex77) +
.77+ ,
Message77, 3
)773 4
;774 5
}88 
}99 	
public?? 
void?? 
GetFirstSevenTiles?? &
(??& '
int??' *
idGame??+ 1
)??1 2
{@@ 	
varAA 

connectionAA 
=AA 
OperationContextAA -
.AA- .
CurrentAA. 5
.AA5 6
GetCallbackChannelAA6 H
<AAH I
IGameClientAAI T
>AAT U
(AAU V
)AAV W
;AAW X
stringCC 
[CC 
]CC 
dominoesPerPlayerCC &
=CC' (
newCC) ,
stringCC- 3
[CC3 4
$numCC4 6
]CC6 7
;CC7 8
ifDD 
(DD 
!DD 
	_dominoesDD 
.DD 
TryGetValueDD &
(DD& '
idGameDD' -
,DD- .
outDD/ 2
stringDD3 9
[DD9 :
]DD: ;
dominoesInGameDD< J
)DDJ K
)DDK L
returnEE 
;EE 
ArrayGG 
.GG 
CopyGG 
(GG 
dominoesInGameGG %
,GG% &
$numGG' (
,GG( )
dominoesPerPlayerGG* ;
,GG; <
$numGG= >
,GG> ?
$numGG@ A
)GGA B
;GGB C
varII 
myListII 
=II 
dominoesInGameII '
.II' (
ToListII( .
(II. /
)II/ 0
;II0 1
myListJJ 
.JJ 
RemoveRangeJJ 
(JJ 
$numJJ  
,JJ  !
$numJJ" #
)JJ# $
;JJ$ %
dominoesInGameKK 
=KK 
myListKK #
.KK# $
ToArrayKK$ +
(KK+ ,
)KK, -
;KK- .
ShuffleMM 
(MM 
dominoesInGameMM "
)MM" #
;MM# $
	_dominoesOO 
.OO 
RemoveOO 
(OO 
idGameOO #
)OO# $
;OO$ %
	_dominoesPP 
.PP 
AddPP 
(PP 
idGamePP  
,PP  !
dominoesInGamePP" 0
)PP0 1
;PP1 2
tryRR 
{SS 

connectionTT 
.TT 
GetDominoesTT &
(TT& '
dominoesPerPlayerTT' 8
)TT8 9
;TT9 :
}UU 
catchVV 
(VV 
	ExceptionVV 
exVV 
)VV  
{WW 
throwXX 
newXX 
FaultExceptionXX (
(XX( )
exXX) +
.XX+ ,
MessageXX, 3
)XX3 4
;XX4 5
}YY 
}ZZ 	
public`` 
void`` 
GetPlayersName`` "
(``" #
int``# &
idGame``' -
)``- .
{aa 	
varbb 

connectionbb 
=bb 
OperationContextbb -
.bb- .
Currentbb. 5
.bb5 6
GetCallbackChannelbb6 H
<bbH I
IGameClientbbI T
>bbT U
(bbU V
)bbV W
;bbW X
ifdd 
(dd 
!dd 
_currentGamesdd 
.dd 
TryGetValuedd *
(dd* +
idGamedd+ 1
,dd1 2
outdd3 6

Dictionarydd7 A
<ddA B
IGameClientddB M
,ddM N
stringddO U
>ddU V
_membersddW _
)dd_ `
)dd` a
returnee 
;ee 
intgg 

nextMembergg 
=gg 
$numgg 
;gg 
stringhh 
[hh 
]hh 
membershh 
=hh 
newhh "
stringhh# )
[hh) *
_membershh* 2
.hh2 3
Counthh3 8
-hh9 :
$numhh; <
]hh< =
;hh= >
foreachii 
(ii 
varii 
otherii 
inii !
_membersii" *
)ii* +
{jj 
ifkk 
(kk 
otherkk 
.kk 
Keykk 
==kk  

connectionkk! +
)kk+ ,
continuell 
;ll 
membersmm 
[mm 

nextMembermm "
]mm" #
=mm$ %
othermm& +
.mm+ ,
Valuemm, 1
;mm1 2

nextMembernn 
++nn 
;nn 
}oo 
trypp 
{qq 

connectionrr 
.rr 
ReciveMembersInGamerr .
(rr. /
membersrr/ 6
)rr6 7
;rr7 8
}ss 
catchtt 
(tt 
	Exceptiontt 
extt 
)tt  
{uu 
throwvv 
newvv 
FaultExceptionvv (
(vv( )
exvv) +
.vv+ ,
Messagevv, 3
)vv3 4
;vv4 5
}ww 
}xx 	
public
АА 
void
АА 
GetHighestTile
АА "
(
АА" #
int
АА# &
idGame
АА' -
,
АА- .
string
АА/ 5
hostHighestTile
АА6 E
)
ААE F
{
ББ 	
var
ВВ 

connection
ВВ 
=
ВВ 
OperationContext
ВВ -
.
ВВ- .
Current
ВВ. 5
.
ВВ5 6 
GetCallbackChannel
ВВ6 H
<
ВВH I
IGameClient
ВВI T
>
ВВT U
(
ВВU V
)
ВВV W
;
ВВW X
if
ГГ 
(
ГГ 
!
ГГ 
_currentGames
ГГ 
.
ГГ 
TryGetValue
ГГ *
(
ГГ* +
idGame
ГГ+ 1
,
ГГ1 2
out
ГГ3 6

Dictionary
ГГ7 A
<
ГГA B
IGameClient
ГГB M
,
ГГM N
string
ГГO U
>
ГГU V
_members
ГГW _
)
ГГ_ `
)
ГГ` a
return
ДД 
;
ДД 
string
ЕЕ 
highestTile
ЕЕ 
=
ЕЕ  
null
ЕЕ! %
;
ЕЕ% &
string
ЖЖ 
[
ЖЖ 
]
ЖЖ !
highestOfEachPlayer
ЖЖ (
=
ЖЖ) *
new
ЖЖ+ .
string
ЖЖ/ 5
[
ЖЖ5 6
$num
ЖЖ6 7
]
ЖЖ7 8
;
ЖЖ8 9
int
ЗЗ 
count
ЗЗ 
=
ЗЗ 
$num
ЗЗ 
;
ЗЗ 
int
ИИ 
whoIsGonnaStart
ИИ 
=
ИИ  !
$num
ИИ" #
;
ИИ# $
foreach
ЙЙ 
(
ЙЙ 
var
ЙЙ 
other
ЙЙ 
in
ЙЙ !
_members
ЙЙ" *
.
ЙЙ* +
Keys
ЙЙ+ /
)
ЙЙ/ 0
{
КК 
if
ЛЛ 
(
ЛЛ 
other
ЛЛ 
==
ЛЛ 

connection
ЛЛ '
)
ЛЛ' (
{
ММ !
highestOfEachPlayer
НН '
[
НН' (
count
НН( -
]
НН- .
=
НН/ 0
hostHighestTile
НН1 @
;
НН@ A
count
ОО 
++
ОО 
;
ОО 
continue
ПП 
;
ПП 
}
РР !
highestOfEachPlayer
СС #
[
СС# $
count
СС$ )
]
СС) *
=
СС+ ,
other
СС- 2
.
СС2 3
SendHighestTile
СС3 B
(
ССB C
)
ССC D
;
ССD E
count
ТТ 
++
ТТ 
;
ТТ 
}
УУ 
for
ФФ 
(
ФФ 
int
ФФ 
i
ФФ 
=
ФФ 
$num
ФФ 
;
ФФ 
i
ФФ 
<
ФФ 
_members
ФФ  (
.
ФФ( )
Count
ФФ) .
;
ФФ. /
i
ФФ0 1
++
ФФ1 3
)
ФФ3 4
{
ХХ 
bool
ЦЦ 
replace
ЦЦ 
;
ЦЦ 
if
ЧЧ 
(
ЧЧ 
highestTile
ЧЧ 
==
ЧЧ  "
null
ЧЧ# '
)
ЧЧ' (
replace
ШШ 
=
ШШ 
true
ШШ "
;
ШШ" #
else
ЩЩ 
{
ЪЪ 
int
ЫЫ 
highestNumberOne
ЫЫ (
=
ЫЫ) *
int
ЫЫ+ .
.
ЫЫ. /
Parse
ЫЫ/ 4
(
ЫЫ4 5
highestTile
ЫЫ5 @
.
ЫЫ@ A
	Substring
ЫЫA J
(
ЫЫJ K
$num
ЫЫK L
,
ЫЫL M
$num
ЫЫN O
)
ЫЫO P
)
ЫЫP Q
;
ЫЫQ R
int
ЬЬ 
highestNumberTwo
ЬЬ (
=
ЬЬ) *
int
ЬЬ+ .
.
ЬЬ. /
Parse
ЬЬ/ 4
(
ЬЬ4 5
highestTile
ЬЬ5 @
.
ЬЬ@ A
	Substring
ЬЬA J
(
ЬЬJ K
$num
ЬЬK L
,
ЬЬL M
$num
ЬЬN O
)
ЬЬO P
)
ЬЬP Q
;
ЬЬQ R
bool
ЭЭ 
highestIsMule
ЭЭ &
=
ЭЭ' (
highestNumberOne
ЭЭ) 9
==
ЭЭ: <
highestNumberTwo
ЭЭ= M
;
ЭЭM N
int
ЯЯ 
	numberOne
ЯЯ !
=
ЯЯ" #
int
ЯЯ$ '
.
ЯЯ' (
Parse
ЯЯ( -
(
ЯЯ- .!
highestOfEachPlayer
ЯЯ. A
[
ЯЯA B
i
ЯЯB C
]
ЯЯC D
.
ЯЯD E
	Substring
ЯЯE N
(
ЯЯN O
$num
ЯЯO P
,
ЯЯP Q
$num
ЯЯR S
)
ЯЯS T
)
ЯЯT U
;
ЯЯU V
int
†† 
	numberTwo
†† !
=
††" #
int
††$ '
.
††' (
Parse
††( -
(
††- .!
highestOfEachPlayer
††. A
[
††A B
i
††B C
]
††C D
.
††D E
	Substring
††E N
(
††N O
$num
††O P
,
††P Q
$num
††R S
)
††S T
)
††T U
;
††U V
bool
°° 
isMule
°° 
=
°°  !
	numberOne
°°" +
==
°°, .
	numberTwo
°°/ 8
;
°°8 9
if
££ 
(
££ 
highestIsMule
££ %
)
££% &
{
§§ 
replace
•• 
=
••  !
HighestIsMule
••" /
(
••/ 0
isMule
••0 6
,
••6 7
	numberOne
••8 A
,
••A B
highestNumberOne
••C S
)
••S T
;
••T U
}
¶¶ 
else
ІІ 
{
®® 
int
©© 
weight
©© "
=
©©# $
	numberOne
©©% .
+
©©/ 0
	numberTwo
©©1 :
;
©©: ;
int
™™ 
highestWeight
™™ )
=
™™* +
highestNumberOne
™™, <
+
™™= >
highestNumberTwo
™™? O
;
™™O P
replace
ЂЂ 
=
ЂЂ  !
HighestIsNotMule
ЂЂ" 2
(
ЂЂ2 3
isMule
ЂЂ3 9
,
ЂЂ9 :
weight
ЂЂ; A
,
ЂЂA B
highestWeight
ЂЂC P
)
ЂЂP Q
;
ЂЂQ R
}
ђђ 
}
≠≠ 
if
ЃЃ 
(
ЃЃ 
replace
ЃЃ 
)
ЃЃ 
{
ѓѓ 
highestTile
∞∞ 
=
∞∞  !!
highestOfEachPlayer
∞∞" 5
[
∞∞5 6
i
∞∞6 7
]
∞∞7 8
;
∞∞8 9
whoIsGonnaStart
±± #
=
±±$ %
i
±±& '
;
±±' (
}
≤≤ 
}
≥≥ 
count
іі 
=
іі 
$num
іі 
;
іі 
foreach
µµ 
(
µµ 
var
µµ 
other
µµ 
in
µµ !
_members
µµ" *
.
µµ* +
Keys
µµ+ /
)
µµ/ 0
{
ґґ 
if
ЈЈ 
(
ЈЈ 
count
ЈЈ 
==
ЈЈ 
whoIsGonnaStart
ЈЈ ,
)
ЈЈ, -
{
ЄЄ 
other
єє 
.
єє 

IsYourTurn
єє $
(
єє$ %
true
єє% )
)
єє) *
;
єє* +
break
ЇЇ 
;
ЇЇ 
}
її 
count
ЉЉ 
++
ЉЉ 
;
ЉЉ 
}
љљ 
}
ЊЊ 	
private
јј 
bool
јј 
HighestIsNotMule
јј %
(
јј% &
bool
јј& *
isMule
јј+ 1
,
јј1 2
int
јј3 6
weight
јј7 =
,
јј= >
int
јј? B
highestWeight
јјC P
)
јјP Q
{
ЅЅ 	
if
¬¬ 
(
¬¬ 
isMule
¬¬ 
)
¬¬ 
return
√√ 
true
√√ 
;
√√ 
else
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆ 
weight
∆∆ 
>
∆∆ 
highestWeight
∆∆ *
)
∆∆* +
return
«« 
true
«« 
;
««  
}
»» 
return
…… 
false
…… 
;
…… 
}
   	
private
ћћ 
bool
ћћ 
HighestIsMule
ћћ "
(
ћћ" #
bool
ћћ# '
isMule
ћћ( .
,
ћћ. /
int
ћћ0 3
	numberOne
ћћ4 =
,
ћћ= >
int
ћћ? B
highestNumberOne
ћћC S
)
ћћS T
{
ЌЌ 	
if
ќќ 
(
ќќ 
isMule
ќќ 
&&
ќќ 
	numberOne
ќќ #
>
ќќ$ %
highestNumberOne
ќќ& 6
)
ќќ6 7
return
ѕѕ 
true
ѕѕ 
;
ѕѕ 
return
–– 
false
–– 
;
–– 
}
—— 	
public
ЏЏ 
void
ЏЏ 
PutATile
ЏЏ 
(
ЏЏ 
int
ЏЏ  
idGame
ЏЏ! '
,
ЏЏ' (
string
ЏЏ) /
tile
ЏЏ0 4
,
ЏЏ4 5
bool
ЏЏ6 :
decision
ЏЏ; C
)
ЏЏC D
{
џџ 	
var
№№ 

connection
№№ 
=
№№ 
OperationContext
№№ -
.
№№- .
Current
№№. 5
.
№№5 6 
GetCallbackChannel
№№6 H
<
№№H I
IGameClient
№№I T
>
№№T U
(
№№U V
)
№№V W
;
№№W X
if
ЁЁ 
(
ЁЁ 
!
ЁЁ 
_currentGames
ЁЁ 
.
ЁЁ 
TryGetValue
ЁЁ *
(
ЁЁ* +
idGame
ЁЁ+ 1
,
ЁЁ1 2
out
ЁЁ3 6

Dictionary
ЁЁ7 A
<
ЁЁA B
IGameClient
ЁЁB M
,
ЁЁM N
string
ЁЁO U
>
ЁЁU V
_members
ЁЁW _
)
ЁЁ_ `
)
ЁЁ` a
return
ёё 
;
ёё 
if
яя 
(
яя 
!
яя 
_members
яя 
.
яя 
TryGetValue
яя %
(
яя% &

connection
яя& 0
,
яя0 1
out
яя2 5
string
яя6 <
whoPutTheTile
яя= J
)
яяJ K
)
яяK L
return
аа 
;
аа 
foreach
бб 
(
бб 
var
бб 
other
бб 
in
бб !
_members
бб" *
.
бб* +
Keys
бб+ /
)
бб/ 0
{
вв 
if
гг 
(
гг 
other
гг 
==
гг 

connection
гг '
)
гг' (
continue
дд 
;
дд 
other
ее 
.
ее 
SomeonePutATile
ее %
(
ее% &
whoPutTheTile
ее& 3
,
ее3 4
tile
ее5 9
,
ее9 :
decision
ее; C
)
ееC D
;
ееD E
}
жж 
}
зз 	
public
нн 
void
нн 
PassTurn
нн 
(
нн 
int
нн  
idGame
нн! '
)
нн' (
{
оо 	
var
пп 

connection
пп 
=
пп 
OperationContext
пп -
.
пп- .
Current
пп. 5
.
пп5 6 
GetCallbackChannel
пп6 H
<
ппH I
IGameClient
ппI T
>
ппT U
(
ппU V
)
ппV W
;
ппW X
if
рр 
(
рр 
!
рр 
_currentGames
рр 
.
рр 
TryGetValue
рр *
(
рр* +
idGame
рр+ 1
,
рр1 2
out
рр3 6

Dictionary
рр7 A
<
ррA B
IGameClient
ррB M
,
ррM N
string
ррO U
>
ррU V
_members
ррW _
)
рр_ `
)
рр` a
return
сс 
;
сс 
bool
тт 
nextTurn
тт 
=
тт 
false
тт !
;
тт! "
foreach
уу 
(
уу 
var
уу 
other
уу 
in
уу !
_members
уу" *
.
уу* +
Keys
уу+ /
)
уу/ 0
{
фф 
if
хх 
(
хх 
other
хх 
==
хх 

connection
хх '
)
хх' (
{
цц 
nextTurn
чч 
=
чч 
true
чч #
;
чч# $
continue
шш 
;
шш 
}
щщ 
if
ъъ 
(
ъъ 
nextTurn
ъъ 
)
ъъ 
{
ыы 
other
ьь 
.
ьь 

IsYourTurn
ьь $
(
ьь$ %
false
ьь% *
)
ьь* +
;
ьь+ ,
nextTurn
ээ 
=
ээ 
false
ээ $
;
ээ$ %
}
юю 
}
€€ 
if
АА 
(
АА 
nextTurn
АА 
)
АА 
_members
ББ 
.
ББ 
First
ББ 
(
ББ 
)
ББ  
.
ББ  !
Key
ББ! $
.
ББ$ %

IsYourTurn
ББ% /
(
ББ/ 0
false
ББ0 5
)
ББ5 6
;
ББ6 7
}
ВВ 	
public
ИИ 
void
ИИ 
TakeFromTheBank
ИИ #
(
ИИ# $
int
ИИ$ '
idGame
ИИ( .
)
ИИ. /
{
ЙЙ 	
var
КК 

connection
КК 
=
КК 
OperationContext
КК -
.
КК- .
Current
КК. 5
.
КК5 6 
GetCallbackChannel
КК6 H
<
ККH I
IGameClient
ККI T
>
ККT U
(
ККU V
)
ККV W
;
ККW X
if
ЛЛ 
(
ЛЛ 
!
ЛЛ 
	_dominoes
ЛЛ 
.
ЛЛ 
TryGetValue
ЛЛ &
(
ЛЛ& '
idGame
ЛЛ' -
,
ЛЛ- .
out
ЛЛ/ 2
string
ЛЛ3 9
[
ЛЛ9 :
]
ЛЛ: ;
dominoesInGame
ЛЛ< J
)
ЛЛJ K
)
ЛЛK L
return
ММ 
;
ММ 
string
ОО 
newTile
ОО 
=
ОО 
dominoesInGame
ОО +
[
ОО+ ,
$num
ОО, -
]
ОО- .
;
ОО. /
var
РР 
myList
РР 
=
РР 
dominoesInGame
РР '
.
РР' (
ToList
РР( .
(
РР. /
)
РР/ 0
;
РР0 1
myList
СС 
.
СС 
RemoveRange
СС 
(
СС 
$num
СС  
,
СС  !
$num
СС" #
)
СС# $
;
СС$ %
dominoesInGame
ТТ 
=
ТТ 
myList
ТТ #
.
ТТ# $
ToArray
ТТ$ +
(
ТТ+ ,
)
ТТ, -
;
ТТ- .
Shuffle
ФФ 
(
ФФ 
dominoesInGame
ФФ "
)
ФФ" #
;
ФФ# $
	_dominoes
ЦЦ 
.
ЦЦ 
Remove
ЦЦ 
(
ЦЦ 
idGame
ЦЦ #
)
ЦЦ# $
;
ЦЦ$ %
	_dominoes
ЧЧ 
.
ЧЧ 
Add
ЧЧ 
(
ЧЧ 
idGame
ЧЧ  
,
ЧЧ  !
dominoesInGame
ЧЧ" 0
)
ЧЧ0 1
;
ЧЧ1 2
if
ЩЩ 
(
ЩЩ 
!
ЩЩ 
_currentGames
ЩЩ 
.
ЩЩ 
TryGetValue
ЩЩ *
(
ЩЩ* +
idGame
ЩЩ+ 1
,
ЩЩ1 2
out
ЩЩ3 6

Dictionary
ЩЩ7 A
<
ЩЩA B
IGameClient
ЩЩB M
,
ЩЩM N
string
ЩЩO U
>
ЩЩU V
_members
ЩЩW _
)
ЩЩ_ `
)
ЩЩ` a
return
ЪЪ 
;
ЪЪ 
if
ЫЫ 
(
ЫЫ 
!
ЫЫ 
_members
ЫЫ 
.
ЫЫ 
TryGetValue
ЫЫ %
(
ЫЫ% &

connection
ЫЫ& 0
,
ЫЫ0 1
out
ЫЫ2 5
string
ЫЫ6 <
whoTookTheTile
ЫЫ= K
)
ЫЫK L
)
ЫЫL M
return
ЬЬ 
;
ЬЬ 
foreach
ЭЭ 
(
ЭЭ 
var
ЭЭ 
other
ЭЭ 
in
ЭЭ !
_members
ЭЭ" *
)
ЭЭ* +
{
ЮЮ 
if
ЯЯ 
(
ЯЯ 
other
ЯЯ 
.
ЯЯ 
Key
ЯЯ 
==
ЯЯ  

connection
ЯЯ! +
)
ЯЯ+ ,
continue
†† 
;
†† 
other
°° 
.
°° 
Key
°° 
.
°° 
SomeoneTookATile
°° *
(
°°* +
whoTookTheTile
°°+ 9
)
°°9 :
;
°°: ;
}
ҐҐ 
try
§§ 
{
•• 

connection
¶¶ 
.
¶¶ 

GetTheTile
¶¶ %
(
¶¶% &
newTile
¶¶& -
)
¶¶- .
;
¶¶. /
}
ІІ 
catch
®® 
(
®® &
IndexOutOfRangeException
®® +
ex
®®, .
)
®®. /
{
©© 
throw
™™ 
new
™™ 
FaultException
™™ (
(
™™( )
ex
™™) +
.
™™+ ,
Message
™™, 3
)
™™3 4
;
™™4 5
}
ЂЂ 
}
ђђ 	
public
≥≥ 
void
≥≥ 
Win
≥≥ 
(
≥≥ 
int
≥≥ 
idGame
≥≥ "
)
≥≥" #
{
іі 	
var
µµ 

connection
µµ 
=
µµ 
OperationContext
µµ -
.
µµ- .
Current
µµ. 5
.
µµ5 6 
GetCallbackChannel
µµ6 H
<
µµH I
IGameClient
µµI T
>
µµT U
(
µµU V
)
µµV W
;
µµW X
if
ґґ 
(
ґґ 
!
ґґ 
_currentGames
ґґ 
.
ґґ 
TryGetValue
ґґ *
(
ґґ* +
idGame
ґґ+ 1
,
ґґ1 2
out
ґґ3 6

Dictionary
ґґ7 A
<
ґґA B
IGameClient
ґґB M
,
ґґM N
string
ґґO U
>
ґґU V
_members
ґґW _
)
ґґ_ `
)
ґґ` a
return
ЈЈ 
;
ЈЈ 
if
ЄЄ 
(
ЄЄ 
!
ЄЄ 
_members
ЄЄ 
.
ЄЄ 
TryGetValue
ЄЄ %
(
ЄЄ% &

connection
ЄЄ& 0
,
ЄЄ0 1
out
ЄЄ2 5
string
ЄЄ6 <
	theWinner
ЄЄ= F
)
ЄЄF G
)
ЄЄG H
return
єє 
;
єє 
foreach
ЇЇ 
(
ЇЇ 
var
ЇЇ 
other
ЇЇ 
in
ЇЇ !
_members
ЇЇ" *
)
ЇЇ* +
{
її 
if
ЉЉ 
(
ЉЉ 
other
ЉЉ 
.
ЉЉ 
Key
ЉЉ 
==
ЉЉ  

connection
ЉЉ! +
)
ЉЉ+ ,
continue
љљ 
;
љљ 
other
ЊЊ 
.
ЊЊ 
Key
ЊЊ 
.
ЊЊ  
SomeoneWonTheRound
ЊЊ ,
(
ЊЊ, -
	theWinner
ЊЊ- 6
)
ЊЊ6 7
;
ЊЊ7 8
}
њњ 
try
ЅЅ 
{
¬¬ 
using
√√ 
(
√√ 
DominoContext
√√ $
context
√√% ,
=
√√- .
new
√√/ 2
DominoContext
√√3 @
(
√√@ A
)
√√A B
)
√√B C
{
ƒƒ 
var
≈≈ 
round
≈≈ 
=
≈≈ 
context
≈≈  '
.
≈≈' (
Ronda
≈≈( -
.
≈≈- .
FirstOrDefault
≈≈. <
(
≈≈< =
r
≈≈= >
=>
≈≈? A
r
≈≈B C
.
≈≈C D
RondaID
≈≈D K
==
≈≈L N
idGame
≈≈O U
)
≈≈U V
;
≈≈V W
round
∆∆ 
.
∆∆ 
Ganador
∆∆ !
=
∆∆" #
	theWinner
∆∆$ -
;
∆∆- .
var
«« 
game
«« 
=
«« 
round
«« $
.
««$ %
Juego
««% *
;
««* +
game
»» 
.
»» 
Ganador
»»  
=
»»! "
	theWinner
»»# ,
;
»», -
context
…… 
.
…… 
SaveChanges
…… '
(
……' (
)
……( )
;
……) *
}
   
}
ЋЋ 
catch
ћћ 
(
ћћ 
	Exception
ћћ 
ex
ћћ 
)
ћћ  
{
ЌЌ 
throw
ќќ 
new
ќќ 
	Exception
ќќ #
(
ќќ# $
ex
ќќ$ &
.
ќќ& '
Message
ќќ' .
)
ќќ. /
;
ќќ/ 0
}
ѕѕ 
}
–– 	
public
ЎЎ 
void
ЎЎ 
UploadPoints
ЎЎ  
(
ЎЎ  !
int
ЎЎ! $
idGame
ЎЎ% +
,
ЎЎ+ ,
int
ЎЎ- 0
points
ЎЎ1 7
)
ЎЎ7 8
{
ўў 	
var
ЏЏ 

connection
ЏЏ 
=
ЏЏ 
OperationContext
ЏЏ -
.
ЏЏ- .
Current
ЏЏ. 5
.
ЏЏ5 6 
GetCallbackChannel
ЏЏ6 H
<
ЏЏH I
IGameClient
ЏЏI T
>
ЏЏT U
(
ЏЏU V
)
ЏЏV W
;
ЏЏW X
if
џџ 
(
џџ 
!
џџ 
_currentGames
џџ 
.
џџ 
TryGetValue
џџ *
(
џџ* +
idGame
џџ+ 1
,
џџ1 2
out
џџ3 6

Dictionary
џџ7 A
<
џџA B
IGameClient
џџB M
,
џџM N
string
џџO U
>
џџU V
_members
џџW _
)
џџ_ `
)
џџ` a
return
№№ 
;
№№ 
if
ЁЁ 
(
ЁЁ 
!
ЁЁ 
_members
ЁЁ 
.
ЁЁ 
TryGetValue
ЁЁ %
(
ЁЁ% &

connection
ЁЁ& 0
,
ЁЁ0 1
out
ЁЁ2 5
string
ЁЁ6 <
username
ЁЁ= E
)
ЁЁE F
)
ЁЁF G
return
ёё 
;
ёё 
try
яя 
{
аа 
using
бб 
(
бб 
DominoContext
бб $
context
бб% ,
=
бб- .
new
бб/ 2
DominoContext
бб3 @
(
бб@ A
)
ббA B
)
ббB C
{
вв 
var
гг 
player
гг 
=
гг  
context
гг! (
.
гг( )
Jugador
гг) 0
.
гг0 1
FirstOrDefault
гг1 ?
(
гг? @
p
гг@ A
=>
ггB D
p
ггE F
.
ггF G
RondaID
ггG N
==
ггO Q
idGame
ггR X
&&
ггY [
p
гг\ ]
.
гг] ^
Usuario
гг^ e
.
ггe f
Nombreusuario
ггf s
==
ггt v
username
ггw 
)гг А
;ггА Б
player
дд 
.
дд 
Puntaje
дд "
=
дд# $
points
дд% +
;
дд+ ,
var
ее 
user
ее 
=
ее 
player
ее %
.
ее% &
Usuario
ее& -
;
ее- .
user
жж 
.
жж 
Puntajeacumulado
жж )
+=
жж* ,
points
жж- 3
;
жж3 4
context
зз 
.
зз 
SaveChanges
зз '
(
зз' (
)
зз( )
;
зз) *
}
ии 
_members
йй 
.
йй 
Remove
йй 
(
йй  

connection
йй  *
)
йй* +
;
йй+ ,
if
кк 
(
кк 
_members
кк 
.
кк 
Count
кк "
==
кк# %
$num
кк& '
)
кк' (
{
лл 
_rooms
мм 
.
мм 
Remove
мм !
(
мм! "
idGame
мм" (
)
мм( )
;
мм) *
_currentGames
нн !
.
нн! "
Remove
нн" (
(
нн( )
idGame
нн) /
)
нн/ 0
;
нн0 1
	_dominoes
оо 
.
оо 
Remove
оо $
(
оо$ %
idGame
оо% +
)
оо+ ,
;
оо, -
}
пп 
}
рр 
catch
сс 
(
сс 
	Exception
сс 
ex
сс 
)
сс  
{
тт 
throw
уу 
new
уу 
	Exception
уу #
(
уу# $
ex
уу$ &
.
уу& '
Message
уу' .
)
уу. /
;
уу/ 0
}
фф 
}
хх 	
private
чч 
readonly
чч 

Dictionary
чч #
<
чч# $
ILobbyClient
чч$ 0
,
чч0 1
string
чч2 8
>
чч8 9
_lobbies
чч: B
=
ччC D
new
ччE H

Dictionary
ччI S
<
ччS T
ILobbyClient
ччT `
,
чч` a
string
ччb h
>
ччh i
(
ччi j
)
ччj k
;
ччk l
public
ээ 
void
ээ 
	JoinLobby
ээ 
(
ээ 
string
ээ $
username
ээ% -
)
ээ- .
{
юю 	
var
€€ 

connection
€€ 
=
€€ 
OperationContext
€€ -
.
€€- .
Current
€€. 5
.
€€5 6 
GetCallbackChannel
€€6 H
<
€€H I
ILobbyClient
€€I U
>
€€U V
(
€€V W
)
€€W X
;
€€X Y
_lobbies
АА 
[
АА 

connection
АА 
]
АА  
=
АА! "
username
АА# +
;
АА+ ,
}
ББ 	
public
ЖЖ 
void
ЖЖ 
GetGames
ЖЖ 
(
ЖЖ 
)
ЖЖ 
{
ЗЗ 	
var
ИИ 

connection
ИИ 
=
ИИ 
OperationContext
ИИ -
.
ИИ- .
Current
ИИ. 5
.
ИИ5 6 
GetCallbackChannel
ИИ6 H
<
ИИH I
ILobbyClient
ИИI U
>
ИИU V
(
ИИV W
)
ИИW X
;
ИИX Y
foreach
ЙЙ 
(
ЙЙ 
var
ЙЙ 
other
ЙЙ 
in
ЙЙ !
_games
ЙЙ" (
.
ЙЙ( )
Keys
ЙЙ) -
)
ЙЙ- .
{
КК 

connection
ЛЛ 
.
ЛЛ 

ReciveGame
ЛЛ %
(
ЛЛ% &
other
ЛЛ& +
)
ЛЛ+ ,
;
ЛЛ, -
}
ММ 
}
НН 	
private
ПП 
readonly
ПП 

Dictionary
ПП #
<
ПП# $
string
ПП$ *
,
ПП* +

Dictionary
ПП, 6
<
ПП6 7
ILobbyClient
ПП7 C
,
ППC D
string
ППE K
>
ППK L
>
ППL M
_games
ППN T
=
ППU V
new
ППW Z

Dictionary
ПП[ e
<
ППe f
string
ППf l
,
ППl m

Dictionary
ППn x
<
ППx y
ILobbyClientППy Е
,ППЕ Ж
stringППЗ Н
>ППН О
>ППО П
(ППП Р
)ППР С
;ППС Т
public
ХХ 
void
ХХ 

CreateGame
ХХ 
(
ХХ 
string
ХХ %
gameName
ХХ& .
)
ХХ. /
{
ЦЦ 	
var
ЧЧ 

connection
ЧЧ 
=
ЧЧ 
OperationContext
ЧЧ -
.
ЧЧ- .
Current
ЧЧ. 5
.
ЧЧ5 6 
GetCallbackChannel
ЧЧ6 H
<
ЧЧH I
ILobbyClient
ЧЧI U
>
ЧЧU V
(
ЧЧV W
)
ЧЧW X
;
ЧЧX Y

Dictionary
ШШ 
<
ШШ 
ILobbyClient
ШШ #
,
ШШ# $
string
ШШ% +
>
ШШ+ ,
_members
ШШ- 5
=
ШШ6 7
new
ШШ8 ;

Dictionary
ШШ< F
<
ШШF G
ILobbyClient
ШШG S
,
ШШS T
string
ШШU [
>
ШШ[ \
(
ШШ\ ]
)
ШШ] ^
;
ШШ^ _
_games
ЩЩ 
.
ЩЩ 
Add
ЩЩ 
(
ЩЩ 
gameName
ЩЩ 
,
ЩЩ  
_members
ЩЩ! )
)
ЩЩ) *
;
ЩЩ* +
if
ЫЫ 
(
ЫЫ 
!
ЫЫ 
_lobbies
ЫЫ 
.
ЫЫ 
TryGetValue
ЫЫ %
(
ЫЫ% &

connection
ЫЫ& 0
,
ЫЫ0 1
out
ЫЫ2 5
string
ЫЫ6 <
host
ЫЫ= A
)
ЫЫA B
)
ЫЫB C
return
ЬЬ 
;
ЬЬ 
_games
ЮЮ 
[
ЮЮ 
gameName
ЮЮ 
]
ЮЮ 
.
ЮЮ 
Add
ЮЮ  
(
ЮЮ  !

connection
ЮЮ! +
,
ЮЮ+ ,
host
ЮЮ- 1
)
ЮЮ1 2
;
ЮЮ2 3
foreach
†† 
(
†† 
var
†† 
other
†† 
in
†† !
_lobbies
††" *
.
††* +
Keys
††+ /
)
††/ 0
{
°° 
if
ҐҐ 
(
ҐҐ 
other
ҐҐ 
==
ҐҐ 

connection
ҐҐ '
)
ҐҐ' (
continue
££ 
;
££ 
other
§§ 
.
§§ 

ReciveGame
§§  
(
§§  !
gameName
§§! )
)
§§) *
;
§§* +
}
•• 
}
¶¶ 	
public
ђђ 
void
ђђ 
JoinGame
ђђ 
(
ђђ 
string
ђђ #
gameName
ђђ$ ,
)
ђђ, -
{
≠≠ 	
var
ЃЃ 

connection
ЃЃ 
=
ЃЃ 
OperationContext
ЃЃ -
.
ЃЃ- .
Current
ЃЃ. 5
.
ЃЃ5 6 
GetCallbackChannel
ЃЃ6 H
<
ЃЃH I
ILobbyClient
ЃЃI U
>
ЃЃU V
(
ЃЃV W
)
ЃЃW X
;
ЃЃX Y
if
ѓѓ 
(
ѓѓ 
!
ѓѓ 
_lobbies
ѓѓ 
.
ѓѓ 
TryGetValue
ѓѓ %
(
ѓѓ% &

connection
ѓѓ& 0
,
ѓѓ0 1
out
ѓѓ2 5
string
ѓѓ6 <
	newMember
ѓѓ= F
)
ѓѓF G
)
ѓѓG H
return
∞∞ 
;
∞∞ 
if
≤≤ 
(
≤≤ 
!
≤≤ 
_games
≤≤ 
.
≤≤ 
TryGetValue
≤≤ #
(
≤≤# $
gameName
≤≤$ ,
,
≤≤, -
out
≤≤. 1

Dictionary
≤≤2 <
<
≤≤< =
ILobbyClient
≤≤= I
,
≤≤I J
string
≤≤K Q
>
≤≤Q R
_members
≤≤S [
)
≤≤[ \
)
≤≤\ ]
return
≥≥ 
;
≥≥ 
int
µµ 
numberOfPlayers
µµ 
=
µµ  !
$num
µµ" #
;
µµ# $
bool
ґґ 
canEnter
ґґ 
=
ґґ 
false
ґґ !
;
ґґ! "
foreach
ЄЄ 
(
ЄЄ 
var
ЄЄ 
other
ЄЄ 
in
ЄЄ !
_members
ЄЄ" *
.
ЄЄ* +
Keys
ЄЄ+ /
)
ЄЄ/ 0
{
єє 
other
ЇЇ 
.
ЇЇ !
SendNumberOfPlayers
ЇЇ )
(
ЇЇ) *
out
ЇЇ* -
numberOfPlayers
ЇЇ. =
)
ЇЇ= >
;
ЇЇ> ?
if
її 
(
її 
numberOfPlayers
її #
!=
її$ &
$num
її' (
)
її( )
break
ЉЉ 
;
ЉЉ 
}
љљ 
if
њњ 
(
њњ 
numberOfPlayers
њњ 
>
њњ  !
_members
њњ" *
.
њњ* +
Count
њњ+ 0
)
њњ0 1
canEnter
јј 
=
јј 
true
јј 
;
јј  
if
¬¬ 
(
¬¬ 
canEnter
¬¬ 
)
¬¬ 
{
√√ 
int
ƒƒ 

nextMember
ƒƒ 
=
ƒƒ  
$num
ƒƒ! "
;
ƒƒ" #
string
≈≈ 
[
≈≈ 
]
≈≈ 
members
≈≈  
=
≈≈! "
new
≈≈# &
string
≈≈' -
[
≈≈- .
_members
≈≈. 6
.
≈≈6 7
Count
≈≈7 <
]
≈≈< =
;
≈≈= >
foreach
∆∆ 
(
∆∆ 
var
∆∆ 
other
∆∆ "
in
∆∆# %
_members
∆∆& .
.
∆∆. /
Keys
∆∆/ 3
)
∆∆3 4
{
«« 
if
»» 
(
»» 
other
»» 
==
»»  

connection
»»! +
)
»»+ ,
continue
……  
;
……  !
members
   
[
   

nextMember
   &
]
  & '
=
  ( )
other
  * /
.
  / 0
SendUsername
  0 <
(
  < =
)
  = >
;
  > ?

nextMember
ЋЋ 
++
ЋЋ  
;
ЋЋ  !
other
ћћ 
.
ћћ 
ReciveMember
ћћ &
(
ћћ& '
	newMember
ћћ' 0
)
ћћ0 1
;
ћћ1 2
}
ЌЌ 
_games
ќќ 
[
ќќ 
gameName
ќќ 
]
ќќ  
.
ќќ  !
Add
ќќ! $
(
ќќ$ %

connection
ќќ% /
,
ќќ/ 0
	newMember
ќќ1 :
)
ќќ: ;
;
ќќ; <

connection
ѕѕ 
.
ѕѕ 
ReciveMembers
ѕѕ (
(
ѕѕ( )
members
ѕѕ) 0
)
ѕѕ0 1
;
ѕѕ1 2
}
–– 
else
—— 

connection
““ 
.
““ 
GameFull
““ #
(
““# $
)
““$ %
;
““% &
}
”” 	
public
ЏЏ 
void
ЏЏ 
	BreakGame
ЏЏ 
(
ЏЏ 
string
ЏЏ $
gameName
ЏЏ% -
)
ЏЏ- .
{
џџ 	
var
№№ 

connection
№№ 
=
№№ 
OperationContext
№№ -
.
№№- .
Current
№№. 5
.
№№5 6 
GetCallbackChannel
№№6 H
<
№№H I
ILobbyClient
№№I U
>
№№U V
(
№№V W
)
№№W X
;
№№X Y
if
ёё 
(
ёё 
!
ёё 
_games
ёё 
.
ёё 
TryGetValue
ёё #
(
ёё# $
gameName
ёё$ ,
,
ёё, -
out
ёё. 1

Dictionary
ёё2 <
<
ёё< =
ILobbyClient
ёё= I
,
ёёI J
string
ёёK Q
>
ёёQ R
_members
ёёS [
)
ёё[ \
)
ёё\ ]
return
яя 
;
яя 
foreach
бб 
(
бб 
var
бб 
other
бб 
in
бб !
_members
бб" *
.
бб* +
Keys
бб+ /
)
бб/ 0
{
вв 
if
гг 
(
гг 
other
гг 
==
гг 

connection
гг '
)
гг' (
continue
дд 
;
дд 
bool
ее 
	kickedOut
ее 
=
ее  
false
ее! &
;
ее& '
other
жж 
.
жж 
	LeaveGame
жж 
(
жж  
	kickedOut
жж  )
)
жж) *
;
жж* +
}
зз 
_games
йй 
.
йй 
Remove
йй 
(
йй 
gameName
йй "
)
йй" #
;
йй# $
foreach
лл 
(
лл 
var
лл 
other
лл 
in
лл !
_lobbies
лл" *
.
лл* +
Keys
лл+ /
)
лл/ 0
{
мм 
if
нн 
(
нн 
other
нн 
==
нн 

connection
нн '
)
нн' (
continue
оо 
;
оо 
other
пп 
.
пп 
UpdateGames
пп !
(
пп! "
)
пп" #
;
пп# $
}
рр 
}
сс 	
public
чч 
void
чч 
MemberLeftGame
чч "
(
чч" #
string
чч# )
gameName
чч* 2
)
чч2 3
{
шш 	
var
щщ 

connection
щщ 
=
щщ 
OperationContext
щщ -
.
щщ- .
Current
щщ. 5
.
щщ5 6 
GetCallbackChannel
щщ6 H
<
щщH I
ILobbyClient
щщI U
>
щщU V
(
щщV W
)
щщW X
;
щщX Y
if
ъъ 
(
ъъ 
!
ъъ 
_lobbies
ъъ 
.
ъъ 
TryGetValue
ъъ %
(
ъъ% &

connection
ъъ& 0
,
ъъ0 1
out
ъъ2 5
string
ъъ6 <
memberWhoLeft
ъъ= J
)
ъъJ K
)
ъъK L
return
ыы 
;
ыы 
_games
ээ 
[
ээ 
gameName
ээ 
]
ээ 
.
ээ 
Remove
ээ #
(
ээ# $

connection
ээ$ .
)
ээ. /
;
ээ/ 0
if
€€ 
(
€€ 
!
€€ 
_games
€€ 
.
€€ 
TryGetValue
€€ #
(
€€# $
gameName
€€$ ,
,
€€, -
out
€€. 1

Dictionary
€€2 <
<
€€< =
ILobbyClient
€€= I
,
€€I J
string
€€K Q
>
€€Q R
_members
€€S [
)
€€[ \
)
€€\ ]
return
АА 
;
АА 
foreach
ВВ 
(
ВВ 
var
ВВ 
other
ВВ 
in
ВВ !
_members
ВВ" *
.
ВВ* +
Keys
ВВ+ /
)
ВВ/ 0
{
ГГ 
if
ДД 
(
ДД 
other
ДД 
==
ДД 

connection
ДД '
)
ДД' (
continue
ЕЕ 
;
ЕЕ 
other
ЖЖ 
.
ЖЖ 
SomeoneLeftGame
ЖЖ %
(
ЖЖ% &
memberWhoLeft
ЖЖ& 3
)
ЖЖ3 4
;
ЖЖ4 5
}
ЗЗ 
}
ИИ 	
public
ПП 
void
ПП 

KickPlayer
ПП 
(
ПП 
string
ПП %
username
ПП& .
,
ПП. /
string
ПП0 6
gameName
ПП7 ?
)
ПП? @
{
РР 	
var
СС 

connection
СС 
=
СС 
OperationContext
СС -
.
СС- .
Current
СС. 5
.
СС5 6 
GetCallbackChannel
СС6 H
<
ССH I
ILobbyClient
ССI U
>
ССU V
(
ССV W
)
ССW X
;
ССX Y
if
ТТ 
(
ТТ 
!
ТТ 
_games
ТТ 
.
ТТ 
TryGetValue
ТТ #
(
ТТ# $
gameName
ТТ$ ,
,
ТТ, -
out
ТТ. 1

Dictionary
ТТ2 <
<
ТТ< =
ILobbyClient
ТТ= I
,
ТТI J
string
ТТK Q
>
ТТQ R
_members
ТТS [
)
ТТ[ \
)
ТТ\ ]
return
УУ 
;
УУ 
bool
ФФ 
	kickedOut
ФФ 
=
ФФ 
true
ФФ !
;
ФФ! "
foreach
ХХ 
(
ХХ 
var
ХХ 
other
ХХ 
in
ХХ !
_members
ХХ" *
.
ХХ* +
Keys
ХХ+ /
)
ХХ/ 0
{
ЦЦ 
if
ЧЧ 
(
ЧЧ 
other
ЧЧ 
==
ЧЧ 

connection
ЧЧ '
)
ЧЧ' (
continue
ШШ 
;
ШШ 
if
ЩЩ 
(
ЩЩ 
!
ЩЩ 
_members
ЩЩ 
.
ЩЩ 
TryGetValue
ЩЩ )
(
ЩЩ) *
other
ЩЩ* /
,
ЩЩ/ 0
out
ЩЩ1 4
string
ЩЩ5 ;
member
ЩЩ< B
)
ЩЩB C
)
ЩЩC D
return
ЪЪ 
;
ЪЪ 
if
ЫЫ 
(
ЫЫ 
member
ЫЫ 
==
ЫЫ 
username
ЫЫ &
)
ЫЫ& '
{
ЬЬ 
other
ЭЭ 
.
ЭЭ 
	LeaveGame
ЭЭ #
(
ЭЭ# $
	kickedOut
ЭЭ$ -
)
ЭЭ- .
;
ЭЭ. /
break
ЮЮ 
;
ЮЮ 
}
ЯЯ 
}
†† 
}
°° 	
public
ІІ 
void
ІІ 
	StartGame
ІІ 
(
ІІ 
string
ІІ $
gameName
ІІ% -
)
ІІ- .
{
®® 	
try
©© 
{
™™ 
using
ЂЂ 
(
ЂЂ 
DominoContext
ЂЂ $
context
ЂЂ% ,
=
ЂЂ- .
new
ЂЂ/ 2
DominoContext
ЂЂ3 @
(
ЂЂ@ A
)
ЂЂA B
)
ЂЂB C
{
ђђ 
if
≠≠ 
(
≠≠ 
!
≠≠ 
_games
≠≠ 
.
≠≠  
TryGetValue
≠≠  +
(
≠≠+ ,
gameName
≠≠, 4
,
≠≠4 5
out
≠≠6 9

Dictionary
≠≠: D
<
≠≠D E
ILobbyClient
≠≠E Q
,
≠≠Q R
string
≠≠S Y
>
≠≠Y Z
_members
≠≠[ c
)
≠≠c d
)
≠≠d e
return
ЃЃ 
;
ЃЃ 
var
∞∞ 
game
∞∞ 
=
∞∞ 
new
∞∞ "
Juego
∞∞# (
{
±± "
Condici√≥ndevictoria
≤≤ +
=
≤≤, -
$str
≤≤. :
,
≤≤: ;
	Duraci√≥n
≥≥  
=
≥≥! "
null
≥≥# '
,
≥≥' (
Ganador
іі 
=
іі  !
null
іі" &
,
іі& '
}
µµ 
;
µµ 
context
ґґ 
.
ґґ 
Juego
ґґ !
.
ґґ! "
Add
ґґ" %
(
ґґ% &
game
ґґ& *
)
ґґ* +
;
ґґ+ ,
context
ЈЈ 
.
ЈЈ 
SaveChanges
ЈЈ '
(
ЈЈ' (
)
ЈЈ( )
;
ЈЈ) *
var
єє 
round
єє 
=
єє 
new
єє  #
Ronda
єє$ )
{
ЇЇ 
Ganador
її 
=
її  !
null
її" &
,
її& '
Juego
ЉЉ 
=
ЉЉ 
game
ЉЉ  $
}
љљ 
;
љљ 
context
ЊЊ 
.
ЊЊ 
Ronda
ЊЊ !
.
ЊЊ! "
Add
ЊЊ" %
(
ЊЊ% &
round
ЊЊ& +
)
ЊЊ+ ,
;
ЊЊ, -
context
њњ 
.
њњ 
SaveChanges
њњ '
(
њњ' (
)
њњ( )
;
њњ) *
foreach
ЅЅ 
(
ЅЅ 
var
ЅЅ  
other
ЅЅ! &
in
ЅЅ' )
_members
ЅЅ* 2
.
ЅЅ2 3
Keys
ЅЅ3 7
)
ЅЅ7 8
{
¬¬ 
if
√√ 
(
√√ 
!
√√ 
_members
√√ %
.
√√% &
TryGetValue
√√& 1
(
√√1 2
other
√√2 7
,
√√7 8
out
√√9 <
string
√√= C
username
√√D L
)
√√L M
)
√√M N
return
ƒƒ "
;
ƒƒ" #
var
≈≈ 
user
≈≈  
=
≈≈! "
context
≈≈# *
.
≈≈* +
Usuario
≈≈+ 2
.
≈≈2 3
FirstOrDefault
≈≈3 A
(
≈≈A B
u
≈≈B C
=>
≈≈D F
u
≈≈G H
.
≈≈H I
Nombreusuario
≈≈I V
==
≈≈W Y
username
≈≈Z b
)
≈≈b c
;
≈≈c d
var
∆∆ 
player
∆∆ "
=
∆∆# $
new
∆∆% (
Jugador
∆∆) 0
{
«« 
Puntaje
»» #
=
»»$ %
$num
»»& '
,
»»' (
Usuario
…… #
=
……$ %
user
……& *
,
……* +
Ronda
   !
=
  " #
round
  $ )
,
  ) *
}
ЋЋ 
;
ЋЋ 
context
ћћ 
.
ћћ  
Jugador
ћћ  '
.
ћћ' (
Add
ћћ( +
(
ћћ+ ,
player
ћћ, 2
)
ћћ2 3
;
ћћ3 4
context
ЌЌ 
.
ЌЌ  
SaveChanges
ЌЌ  +
(
ЌЌ+ ,
)
ЌЌ, -
;
ЌЌ- .
other
ѕѕ 
.
ѕѕ 

StartRound
ѕѕ (
(
ѕѕ( )
round
ѕѕ) .
.
ѕѕ. /
RondaID
ѕѕ/ 6
)
ѕѕ6 7
;
ѕѕ7 8
}
–– 

Dictionary
—— 
<
—— 
IGameClient
—— *
,
——* +
string
——, 2
>
——2 3
_membersGame
——4 @
=
——A B
new
——C F

Dictionary
——G Q
<
——Q R
IGameClient
——R ]
,
——] ^
string
——_ e
>
——e f
(
——f g
)
——g h
;
——h i
_currentGames
““ !
.
““! "
Add
““" %
(
““% &
round
““& +
.
““+ ,
RondaID
““, 3
,
““3 4
_membersGame
““5 A
)
““A B
;
““B C
string
‘‘ 
[
‘‘ 
]
‘‘ 
dominoes
‘‘ %
=
‘‘& '
new
‘‘( +
string
‘‘, 2
[
‘‘2 3
]
‘‘3 4
{
‘‘5 6
$str
‘‘7 ;
,
‘‘; <
$str
‘‘= A
,
‘‘A B
$str
‘‘C G
,
‘‘G H
$str
‘‘I M
,
‘‘M N
$str
‘‘O S
,
‘‘S T
$str
‘‘U Y
,
‘‘Y Z
$str
‘‘[ _
,
‘‘_ `
$str
’’7 ;
,
’’; <
$str
’’= A
,
’’A B
$str
’’C G
,
’’G H
$str
’’I M
,
’’M N
$str
’’O S
,
’’S T
$str
’’U Y
,
’’Y Z
$str
÷÷7 ;
,
÷÷; <
$str
÷÷= A
,
÷÷A B
$str
÷÷C G
,
÷÷G H
$str
÷÷I M
,
÷÷M N
$str
÷÷O S
,
÷÷S T
$str
„„7 ;
,
„„; <
$str
„„= A
,
„„A B
$str
„„C G
,
„„G H
$str
„„I M
,
„„M N
$str
ЎЎ7 ;
,
ЎЎ; <
$str
ЎЎ= A
,
ЎЎA B
$str
ЎЎC G
,
ЎЎG H
$str
ўў7 ;
,
ўў; <
$str
ўў= A
,
ўўA B
$str
ЏЏ7 ;
,
ЏЏ; <
}
ЏЏ= >
;
ЏЏ> ?
Shuffle
џџ 
(
џџ 
dominoes
џџ $
)
џџ$ %
;
џџ% &
	_dominoes
№№ 
.
№№ 
Add
№№ !
(
№№! "
round
№№" '
.
№№' (
RondaID
№№( /
,
№№/ 0
dominoes
№№1 9
)
№№9 :
;
№№: ;

Dictionary
ёё 
<
ёё 
IChatClient
ёё *
,
ёё* +
string
ёё, 2
>
ёё2 3
_membersRoomGame
ёё4 D
=
ёёE F
new
ёёG J

Dictionary
ёёK U
<
ёёU V
IChatClient
ёёV a
,
ёёa b
string
ёёc i
>
ёёi j
(
ёёj k
)
ёёk l
;
ёёl m
_rooms
яя 
.
яя 
Add
яя 
(
яя 
round
яя $
.
яя$ %
RondaID
яя% ,
,
яя, -
_membersRoomGame
яя. >
)
яя> ?
;
яя? @
_games
бб 
.
бб 
Remove
бб !
(
бб! "
gameName
бб" *
)
бб* +
;
бб+ ,
}
вв 
}
гг 
catch
дд 
(
дд 
	Exception
дд 
ex
дд 
)
дд  
{
ее 
throw
жж 
new
жж 
	Exception
жж #
(
жж# $
ex
жж$ &
.
жж& '
Message
жж' .
)
жж. /
;
жж/ 0
}
зз 
}
ии 	
private
кк 
readonly
кк 

Dictionary
кк #
<
кк# $
int
кк$ '
,
кк' (

Dictionary
кк) 3
<
кк3 4
IChatClient
кк4 ?
,
кк? @
string
ккA G
>
ккG H
>
ккH I
_rooms
ккJ P
=
ккQ R
new
ккS V

Dictionary
ккW a
<
ккa b
int
ккb e
,
ккe f

Dictionary
ккg q
<
ккq r
IChatClient
ккr }
,
кк} ~
stringкк Е
>ккЕ Ж
>ккЖ З
(ккЗ И
)ккИ Й
;ккЙ К
public
сс 
void
сс 
JoinChat
сс 
(
сс 
int
сс  
room
сс! %
,
сс% &
string
сс' -
username
сс. 6
)
сс6 7
{
тт 	
var
уу 

connection
уу 
=
уу 
OperationContext
уу -
.
уу- .
Current
уу. 5
.
уу5 6 
GetCallbackChannel
уу6 H
<
ууH I
IChatClient
ууI T
>
ууT U
(
ууU V
)
ууV W
;
ууW X
if
фф 
(
фф 
!
фф 
_rooms
фф 
.
фф 
TryGetValue
фф #
(
фф# $
room
фф$ (
,
фф( )
out
фф* -
_
фф. /
)
фф/ 0
)
фф0 1
{
хх 

Dictionary
цц 
<
цц 
IChatClient
цц &
,
цц& '
string
цц( .
>
цц. /
_membersRoom
цц0 <
=
цц= >
new
цц? B

Dictionary
ццC M
<
ццM N
IChatClient
ццN Y
,
ццY Z
string
цц[ a
>
ццa b
(
ццb c
)
ццc d
;
ццd e
_rooms
чч 
.
чч 
Add
чч 
(
чч 
$num
чч 
,
чч 
_membersRoom
чч *
)
чч* +
;
чч+ ,
}
шш 
_rooms
щщ 
[
щщ 
room
щщ 
]
щщ 
.
щщ 
Add
щщ 
(
щщ 

connection
щщ '
,
щщ' (
username
щщ) 1
)
щщ1 2
;
щщ2 3
}
ъъ 	
public
ББ 
void
ББ 
SendMessage
ББ 
(
ББ  
int
ББ  #
room
ББ$ (
,
ББ( )
string
ББ* 0
message
ББ1 8
)
ББ8 9
{
ВВ 	
var
ГГ 

connection
ГГ 
=
ГГ 
OperationContext
ГГ -
.
ГГ- .
Current
ГГ. 5
.
ГГ5 6 
GetCallbackChannel
ГГ6 H
<
ГГH I
IChatClient
ГГI T
>
ГГT U
(
ГГU V
)
ГГV W
;
ГГW X
if
ДД 
(
ДД 
!
ДД 
_rooms
ДД 
.
ДД 
TryGetValue
ДД #
(
ДД# $
room
ДД$ (
,
ДД( )
out
ДД* -

Dictionary
ДД. 8
<
ДД8 9
IChatClient
ДД9 D
,
ДДD E
string
ДДF L
>
ДДL M
_membersRoom
ДДN Z
)
ДДZ [
)
ДД[ \
return
ЕЕ 
;
ЕЕ 
if
ЖЖ 
(
ЖЖ 
!
ЖЖ 
_membersRoom
ЖЖ 
.
ЖЖ 
TryGetValue
ЖЖ )
(
ЖЖ) *

connection
ЖЖ* 4
,
ЖЖ4 5
out
ЖЖ6 9
string
ЖЖ: @
user
ЖЖA E
)
ЖЖE F
)
ЖЖF G
return
ЗЗ 
;
ЗЗ 
foreach
ЙЙ 
(
ЙЙ 
var
ЙЙ 
other
ЙЙ 
in
ЙЙ !
_membersRoom
ЙЙ" .
.
ЙЙ. /
Keys
ЙЙ/ 3
)
ЙЙ3 4
{
КК 
if
ЛЛ 
(
ЛЛ 
other
ЛЛ 
==
ЛЛ 

connection
ЛЛ '
)
ЛЛ' (
continue
ММ 
;
ММ 
other
НН 
.
НН 
ReciveMessage
НН #
(
НН# $
user
НН$ (
,
НН( )
message
НН* 1
)
НН1 2
;
НН2 3
}
ОО 
}
ПП 	
public
ШШ 
bool
ШШ 
ChangePassword
ШШ "
(
ШШ" #
string
ШШ# )
username
ШШ* 2
,
ШШ2 3
string
ШШ4 :
currentPassword
ШШ; J
,
ШШJ K
string
ШШL R
newPassword
ШШS ^
)
ШШ^ _
{
ЩЩ 	
try
ЪЪ 
{
ЫЫ 
using
ЬЬ 
(
ЬЬ 
DominoContext
ЬЬ $
context
ЬЬ% ,
=
ЬЬ- .
new
ЬЬ/ 2
DominoContext
ЬЬ3 @
(
ЬЬ@ A
)
ЬЬA B
)
ЬЬB C
{
ЭЭ 
var
ЮЮ 
user
ЮЮ 
=
ЮЮ 
context
ЮЮ &
.
ЮЮ& '
Usuario
ЮЮ' .
.
ЮЮ. /
FirstOrDefault
ЮЮ/ =
(
ЮЮ= >
u
ЮЮ> ?
=>
ЮЮ@ B
u
ЮЮC D
.
ЮЮD E
Nombreusuario
ЮЮE R
==
ЮЮS U
username
ЮЮV ^
)
ЮЮ^ _
;
ЮЮ_ `
if
ЯЯ 
(
ЯЯ 
user
ЯЯ 
!=
ЯЯ 
null
ЯЯ  $
&&
ЯЯ% '
(
ЯЯ( )
user
ЯЯ) -
.
ЯЯ- .
Contrase√±a
ЯЯ. 8
.
ЯЯ8 9
Equals
ЯЯ9 ?
(
ЯЯ? @
currentPassword
ЯЯ@ O
.
ЯЯO P
GetHashCode
ЯЯP [
(
ЯЯ[ \
)
ЯЯ\ ]
.
ЯЯ] ^
ToString
ЯЯ^ f
(
ЯЯf g
)
ЯЯg h
)
ЯЯh i
)
ЯЯi j
)
ЯЯj k
{
†† 
user
°° 
.
°° 
Contrase√±a
°° '
=
°°( )
newPassword
°°* 5
.
°°5 6
GetHashCode
°°6 A
(
°°A B
)
°°B C
.
°°C D
ToString
°°D L
(
°°L M
)
°°M N
;
°°N O
context
ҐҐ 
.
ҐҐ  
SaveChanges
ҐҐ  +
(
ҐҐ+ ,
)
ҐҐ, -
;
ҐҐ- .
return
££ 
true
££ #
;
££# $
}
§§ 
}
•• 
}
¶¶ 
catch
ІІ 
(
ІІ 
	Exception
ІІ 
ex
ІІ 
)
ІІ  
{
®® 
throw
©© 
new
©© 
	Exception
©© #
(
©©# $
ex
©©$ &
.
©©& '
Message
©©' .
)
©©. /
;
©©/ 0
}
™™ 
return
ЂЂ 
false
ЂЂ 
;
ЂЂ 
}
ђђ 	
public
≤≤ "
ObservableCollection
≤≤ #
<
≤≤# $
UsuarioPuntajes
≤≤$ 3
>
≤≤3 4
	GetScores
≤≤5 >
(
≤≤> ?
)
≤≤? @
{
≥≥ 	"
ObservableCollection
іі  
<
іі  !
UsuarioPuntajes
іі! 0
>
іі0 1
scores
іі2 8
=
іі9 :
new
іі; >"
ObservableCollection
іі? S
<
ііS T
UsuarioPuntajes
ііT c
>
ііc d
(
ііd e
)
ііe f
;
ііf g
try
µµ 
{
ґґ 
using
ЈЈ 
(
ЈЈ 
DominoContext
ЈЈ $
context
ЈЈ% ,
=
ЈЈ- .
new
ЈЈ/ 2
DominoContext
ЈЈ3 @
(
ЈЈ@ A
)
ЈЈA B
)
ЈЈB C
{
ЄЄ 
var
єє 
usersByScore
єє $
=
єє% &
context
єє' .
.
єє. /
Usuario
єє/ 6
.
єє6 7
OrderByDescending
єє7 H
(
єєH I
p
єєI J
=>
єєK M
p
єєN O
.
єєO P
Puntajeacumulado
єєP `
)
єє` a
;
єєa b
int
ЇЇ 
lugar
ЇЇ 
=
ЇЇ 
$num
ЇЇ  !
;
ЇЇ! "
foreach
її 
(
її 
Usuario
її $
user
її% )
in
її* ,
usersByScore
її- 9
)
її9 :
{
ЉЉ 
if
љљ 
(
љљ 
user
љљ  
!=
љљ! #
null
љљ$ (
)
љљ( )
{
ЊЊ 
scores
њњ "
.
њњ" #
Add
њњ# &
(
њњ& '
new
њњ' *
UsuarioPuntajes
њњ+ :
(
њњ: ;
lugar
њњ; @
,
њњ@ A
user
њњB F
.
њњF G
Nombreusuario
њњG T
,
њњT U
user
њњV Z
.
њњZ [
Puntajeacumulado
њњ[ k
)
њњk l
)
њњl m
;
њњm n
}
јј 
else
ЅЅ 
return
¬¬ "
scores
¬¬# )
;
¬¬) *
lugar
√√ 
++
√√ 
;
√√  
if
≈≈ 
(
≈≈ 
lugar
≈≈ !
==
≈≈" $
$num
≈≈% &
)
≈≈& '
return
∆∆ "
scores
∆∆# )
;
∆∆) *
}
«« 
}
»» 
}
…… 
catch
   
(
   
	Exception
   
ex
   
)
    
{
ЋЋ 
throw
ћћ 
new
ћћ 
	Exception
ћћ #
(
ћћ# $
ex
ћћ$ &
.
ћћ& '
Message
ћћ' .
)
ћћ. /
;
ћћ/ 0
}
ЌЌ 
return
ќќ 
scores
ќќ 
;
ќќ 
}
ѕѕ 	
public
÷÷ 
bool
÷÷ 
RecoverPassword
÷÷ #
(
÷÷# $
string
÷÷$ *
email
÷÷+ 0
)
÷÷0 1
{
„„ 	
try
ЎЎ 
{
ўў 
using
ЏЏ 
(
ЏЏ 
DominoContext
ЏЏ $
context
ЏЏ% ,
=
ЏЏ- .
new
ЏЏ/ 2
DominoContext
ЏЏ3 @
(
ЏЏ@ A
)
ЏЏA B
)
ЏЏB C
{
џџ 
var
№№ 
user
№№ 
=
№№ 
context
№№ &
.
№№& '
Usuario
№№' .
.
№№. /
FirstOrDefault
№№/ =
(
№№= >
u
№№> ?
=>
№№@ B
u
№№C D
.
№№D E
Correo
№№E K
==
№№L N
email
№№O T
)
№№T U
;
№№U V
if
ЁЁ 
(
ЁЁ 
user
ЁЁ 
!=
ЁЁ 
null
ЁЁ  $
)
ЁЁ$ %
{
ёё 
	SendEmail
яя !
(
яя! "
user
яя" &
,
яя& '
false
яя( -
)
яя- .
;
яя. /
return
аа 
true
аа #
;
аа# $
}
бб 
else
вв 
return
гг 
false
гг $
;
гг$ %
}
дд 
}
ее 
catch
жж 
(
жж 
	Exception
жж 
ex
жж 
)
жж  
{
зз 
throw
ии 
new
ии 
	Exception
ии #
(
ии# $
ex
ии$ &
.
ии& '
Message
ии' .
)
ии. /
;
ии/ 0
}
йй 
}
кк 	
[
уу 	
Obsolete
уу	 
(
уу 
$str
уу 5
)
уу5 6
]
уу6 7
public
фф 
bool
фф 
SignUp
фф 
(
фф 
string
фф !
username
фф" *
,
фф* +
string
фф, 2
email
фф3 8
,
фф8 9
string
фф: @
password
ффA I
)
ффI J
{
хх 	
try
цц 
{
чч 
using
шш 
(
шш 
DominoContext
шш $
context
шш% ,
=
шш- .
new
шш/ 2
DominoContext
шш3 @
(
шш@ A
)
шшA B
)
шшB C
{
щщ 
var
ъъ 
existingUser
ъъ $
=
ъъ% &
context
ъъ' .
.
ъъ. /
Usuario
ъъ/ 6
.
ъъ6 7
FirstOrDefault
ъъ7 E
(
ъъE F
u
ъъF G
=>
ъъH J
u
ъъK L
.
ъъL M
Correo
ъъM S
==
ъъT V
email
ъъW \
)
ъъ\ ]
;
ъъ] ^
if
ыы 
(
ыы 
existingUser
ыы $
==
ыы% '
null
ыы( ,
)
ыы, -
{
ьь 
existingUser
ээ $
=
ээ% &
context
ээ' .
.
ээ. /
Usuario
ээ/ 6
.
ээ6 7
FirstOrDefault
ээ7 E
(
ээE F
u
ээF G
=>
ээH J
u
ээK L
.
ээL M
Nombreusuario
ээM Z
==
ээ[ ]
username
ээ^ f
)
ээf g
;
ээg h
if
юю 
(
юю 
existingUser
юю (
==
юю) +
null
юю, 0
)
юю0 1
{
€€ 
password
АА $
=
АА% &
password
АА' /
.
АА/ 0
GetHashCode
АА0 ;
(
АА; <
)
АА< =
.
АА= >
ToString
АА> F
(
ААF G
)
ААG H
;
ААH I
var
ВВ 
user
ВВ  $
=
ВВ% &
new
ВВ' *
Usuario
ВВ+ 2
{
ГГ 
Nombreusuario
ДД  -
=
ДД. /
username
ДД0 8
,
ДД8 9
Correo
ЕЕ  &
=
ЕЕ' (
email
ЕЕ) .
,
ЕЕ. /
Contrase√±a
ЖЖ  *
=
ЖЖ+ ,
password
ЖЖ- 5
,
ЖЖ5 6
Puntajeacumulado
ЗЗ  0
=
ЗЗ1 2
$num
ЗЗ3 4
,
ЗЗ4 5
Estatus
ИИ  '
=
ИИ( )
$num
ИИ* +
,
ИИ+ ,
Token
ЙЙ  %
=
ЙЙ& '
ShortId
ЙЙ( /
.
ЙЙ/ 0
Generate
ЙЙ0 8
(
ЙЙ8 9
)
ЙЙ9 :
.
ЙЙ: ;
Trim
ЙЙ; ?
(
ЙЙ? @
)
ЙЙ@ A
}
КК 
;
КК 
context
ЛЛ #
.
ЛЛ# $
Usuario
ЛЛ$ +
.
ЛЛ+ ,
Add
ЛЛ, /
(
ЛЛ/ 0
user
ЛЛ0 4
)
ЛЛ4 5
;
ЛЛ5 6
context
ММ #
.
ММ# $
SaveChanges
ММ$ /
(
ММ/ 0
)
ММ0 1
;
ММ1 2
	SendEmail
ОО %
(
ОО% &
user
ОО& *
,
ОО* +
true
ОО, 0
)
ОО0 1
;
ОО1 2
Console
РР #
.
РР# $
	WriteLine
РР$ -
(
РР- .
$str
РР. 9
+
РР: ;
username
РР< D
+
РРE F
$str
РРG t
+
РРu v
email
РРw |
)
РР| }
;
РР} ~
return
СС "
true
СС# '
;
СС' (
}
ТТ 
}
УУ 
}
ФФ 
}
ХХ 
catch
ЦЦ 
(
ЦЦ )
DbEntityValidationException
ЦЦ .
e
ЦЦ/ 0
)
ЦЦ0 1
{
ЧЧ 
foreach
ШШ 
(
ШШ 
var
ШШ 
eve
ШШ  
in
ШШ! #
e
ШШ$ %
.
ШШ% &$
EntityValidationErrors
ШШ& <
)
ШШ< =
{
ЩЩ 
Console
ЪЪ 
.
ЪЪ 
	WriteLine
ЪЪ %
(
ЪЪ% &
$str
ЪЪ& t
,
ЪЪt u
eve
ЫЫ 
.
ЫЫ 
Entry
ЫЫ !
.
ЫЫ! "
Entity
ЫЫ" (
.
ЫЫ( )
GetType
ЫЫ) 0
(
ЫЫ0 1
)
ЫЫ1 2
.
ЫЫ2 3
Name
ЫЫ3 7
,
ЫЫ7 8
eve
ЫЫ9 <
.
ЫЫ< =
Entry
ЫЫ= B
.
ЫЫB C
State
ЫЫC H
)
ЫЫH I
;
ЫЫI J
foreach
ЬЬ 
(
ЬЬ 
var
ЬЬ  
ve
ЬЬ! #
in
ЬЬ$ &
eve
ЬЬ' *
.
ЬЬ* +
ValidationErrors
ЬЬ+ ;
)
ЬЬ; <
{
ЭЭ 
Console
ЮЮ 
.
ЮЮ  
	WriteLine
ЮЮ  )
(
ЮЮ) *
$str
ЮЮ* O
,
ЮЮO P
ve
ЯЯ 
.
ЯЯ 
PropertyName
ЯЯ +
,
ЯЯ+ ,
ve
ЯЯ- /
.
ЯЯ/ 0
ErrorMessage
ЯЯ0 <
)
ЯЯ< =
;
ЯЯ= >
}
†† 
}
°° 
throw
ҐҐ 
;
ҐҐ 
}
££ 
return
§§ 
false
§§ 
;
§§ 
}
•• 	
public
ЃЃ 
bool
ЃЃ 
VerificateUser
ЃЃ "
(
ЃЃ" #
string
ЃЃ# )
username
ЃЃ* 2
,
ЃЃ2 3
string
ЃЃ4 :
token
ЃЃ; @
)
ЃЃ@ A
{
ѓѓ 	
try
∞∞ 
{
±± 
using
≤≤ 
(
≤≤ 
DominoContext
≤≤ $
context
≤≤% ,
=
≤≤- .
new
≤≤/ 2
DominoContext
≤≤3 @
(
≤≤@ A
)
≤≤A B
)
≤≤B C
{
≥≥ 
var
іі 
user
іі 
=
іі 
context
іі &
.
іі& '
Usuario
іі' .
.
іі. /
FirstOrDefault
іі/ =
(
іі= >
u
іі> ?
=>
іі@ B
u
ііC D
.
ііD E
Nombreusuario
ііE R
==
ііS U
username
ііV ^
)
іі^ _
;
іі_ `
if
µµ 
(
µµ 
user
µµ 
!=
µµ 
null
µµ  $
)
µµ$ %
{
ґґ 
if
ЈЈ 
(
ЈЈ 
!
ЈЈ 

IsVerified
ЈЈ '
(
ЈЈ' (
user
ЈЈ( ,
.
ЈЈ, -
Nombreusuario
ЈЈ- :
)
ЈЈ: ;
)
ЈЈ; <
{
ЄЄ 
if
єє 
(
єє  
user
єє  $
.
єє$ %
Token
єє% *
==
єє+ -
token
єє. 3
)
єє3 4
{
ЇЇ 
user
її  $
.
її$ %
Estatus
її% ,
=
її- .
$num
її/ 0
;
її0 1
context
ЉЉ  '
.
ЉЉ' (
SaveChanges
ЉЉ( 3
(
ЉЉ3 4
)
ЉЉ4 5
;
ЉЉ5 6
return
љљ  &
true
љљ' +
;
љљ+ ,
}
ЊЊ 
else
њњ  
return
јј  &
false
јј' ,
;
јј, -
}
ЅЅ 
else
¬¬ 
return
√√ "
true
√√# '
;
√√' (
}
ƒƒ 
}
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
ex
«« 
)
««  
{
»» 
throw
…… 
new
…… 
	Exception
…… #
(
……# $
ex
……$ &
.
……& '
Message
……' .
)
……. /
;
……/ 0
}
   
return
ЋЋ 
false
ЋЋ 
;
ЋЋ 
}
ћћ 	
public
”” 
bool
”” 

IsVerified
”” 
(
”” 
string
”” %
username
””& .
)
””. /
{
‘‘ 	
try
’’ 
{
÷÷ 
using
„„ 
(
„„ 
DominoContext
„„ $
context
„„% ,
=
„„- .
new
„„/ 2
DominoContext
„„3 @
(
„„@ A
)
„„A B
)
„„B C
{
ЎЎ 
var
ўў 
user
ўў 
=
ўў 
context
ўў &
.
ўў& '
Usuario
ўў' .
.
ўў. /
FirstOrDefault
ўў/ =
(
ўў= >
u
ўў> ?
=>
ўў@ B
u
ўўC D
.
ўўD E
Nombreusuario
ўўE R
==
ўўS U
username
ўўV ^
)
ўў^ _
;
ўў_ `
if
ЏЏ 
(
ЏЏ 
user
ЏЏ 
!=
ЏЏ 
null
ЏЏ  $
)
ЏЏ$ %
{
џџ 
if
№№ 
(
№№ 
user
№№  
.
№№  !
Estatus
№№! (
==
№№) +
$num
№№, -
)
№№- .
return
ЁЁ "
true
ЁЁ# '
;
ЁЁ' (
else
ёё 
return
яя "
false
яя# (
;
яя( )
}
аа 
}
бб 
}
вв 
catch
гг 
(
гг 
	Exception
гг 
ex
гг 
)
гг  
{
дд 
throw
ее 
new
ее 
	Exception
ее #
(
ее# $
ex
ее$ &
.
ее& '
Message
ее' .
)
ее. /
;
ее/ 0
}
жж 
return
зз 
false
зз 
;
зз 
}
ии 	
public
рр 
string
рр 
LogIn
рр 
(
рр 
string
рр "
email
рр# (
,
рр( )
string
рр* 0
password
рр1 9
)
рр9 :
{
сс 	
try
тт 
{
уу 
using
фф 
(
фф 
DominoContext
фф $
context
фф% ,
=
фф- .
new
фф/ 2
DominoContext
фф3 @
(
фф@ A
)
ффA B
)
ффB C
{
хх 
var
цц 
user
цц 
=
цц 
context
цц &
.
цц& '
Usuario
цц' .
.
цц. /
FirstOrDefault
цц/ =
(
цц= >
u
цц> ?
=>
цц@ B
u
ццC D
.
ццD E
Correo
ццE K
==
ццL N
email
ццO T
)
ццT U
;
ццU V
if
чч 
(
чч 
user
чч 
!=
чч 
null
чч  $
)
чч$ %
{
шш 
if
щщ 
(
щщ 
user
щщ  
.
щщ  !
Contrase√±a
щщ! +
==
щщ, .
password
щщ/ 7
.
щщ7 8
GetHashCode
щщ8 C
(
щщC D
)
щщD E
.
щщE F
ToString
щщF N
(
щщN O
)
щщO P
)
щщP Q
{
ъъ 
Console
ыы #
.
ыы# $
	WriteLine
ыы$ -
(
ыы- .
$str
ыы. 9
+
ыы: ;
user
ыы< @
.
ыы@ A
Nombreusuario
ыыA N
+
ыыO P
$str
ыыQ f
)
ыыf g
;
ыыg h
return
ьь "
user
ьь# '
.
ьь' (
Nombreusuario
ьь( 5
;
ьь5 6
}
ээ 
}
юю 
return
€€ 
(
€€ 
$str
€€ 
)
€€ 
;
€€  
}
АА 
}
ББ 
catch
ВВ 
(
ВВ 
	Exception
ВВ 
ex
ВВ 
)
ВВ  
{
ГГ 
throw
ДД 
new
ДД 
	Exception
ДД #
(
ДД# $
ex
ДД$ &
.
ДД& '
Message
ДД' .
)
ДД. /
;
ДД/ 0
}
ЕЕ 
}
ЖЖ 	
private
ИИ 
void
ИИ 
	SendEmail
ИИ 
(
ИИ 
Usuario
ИИ &
user
ИИ' +
,
ИИ+ ,
bool
ИИ- 1
isSignUp
ИИ2 :
)
ИИ: ;
{
ЙЙ 	
try
КК 
{
ЛЛ 
MailMessage
ММ 
mail
ММ  
=
ММ! "
new
ММ# &
MailMessage
ММ' 2
(
ММ2 3
)
ММ3 4
;
ММ4 5

SmtpClient
НН 

SmtpServer
НН %
=
НН& '
new
НН( +

SmtpClient
НН, 6
(
НН6 7
$str
НН7 G
)
ННG H
;
ННH I
mail
ПП 
.
ПП 
From
ПП 
=
ПП 
new
ПП 
MailAddress
ПП  +
(
ПП+ ,
$str
ПП, G
,
ППG H
$str
ППI W
,
ППW X
System
ППY _
.
ПП_ `
Text
ПП` d
.
ППd e
Encoding
ППe m
.
ППm n
UTF8
ППn r
)
ППr s
;
ППs t
mail
РР 
.
РР 
To
РР 
.
РР 
Add
РР 
(
РР 
user
РР  
.
РР  !
Correo
РР! '
)
РР' (
;
РР( )
if
СС 
(
СС 
isSignUp
СС 
)
СС 
{
ТТ 
mail
УУ 
.
УУ 
Subject
УУ  
=
УУ! "
$str
УУ# C
;
УУC D
mail
ФФ 
.
ФФ 
Body
ФФ 
=
ФФ 
$str
ФФ  (
+
ФФ) *
user
ФФ+ /
.
ФФ/ 0
Nombreusuario
ФФ0 =
+
ФФ> ?
$str
ФФ@ z
+
ФФ{ |
user
ХХ 
.
ХХ 
Token
ХХ "
;
ХХ" #
}
ЦЦ 
else
ЧЧ 
{
ШШ 
mail
ЩЩ 
.
ЩЩ 
Subject
ЩЩ  
=
ЩЩ! "
$str
ЩЩ# G
;
ЩЩG H
mail
ЪЪ 
.
ЪЪ 
Body
ЪЪ 
=
ЪЪ 
$str
ЪЪ  (
+
ЪЪ) *
user
ЪЪ+ /
.
ЪЪ/ 0
Nombreusuario
ЪЪ0 =
+
ЪЪ> ?
$strЪЪ@ А
+ЪЪБ В
user
ЫЫ 
.
ЫЫ 
Contrase√±a
ЫЫ '
+
ЫЫ( )
$str
ЫЫ* k
;
ЫЫk l
}
ЬЬ 

SmtpServer
ЭЭ 
.
ЭЭ 
Port
ЭЭ 
=
ЭЭ  !
$num
ЭЭ" %
;
ЭЭ% &

SmtpServer
ЮЮ 
.
ЮЮ 
Credentials
ЮЮ &
=
ЮЮ' (
new
ЮЮ) ,
System
ЮЮ- 3
.
ЮЮ3 4
Net
ЮЮ4 7
.
ЮЮ7 8
NetworkCredential
ЮЮ8 I
(
ЮЮI J
$str
ЮЮJ e
,
ЮЮe f
$str
ЮЮg v
)
ЮЮv w
;
ЮЮw x

SmtpServer
ЯЯ 
.
ЯЯ 
	EnableSsl
ЯЯ $
=
ЯЯ% &
true
ЯЯ' +
;
ЯЯ+ ,

SmtpServer
†† 
.
†† 
Send
†† 
(
††  
mail
††  $
)
††$ %
;
††% &
}
°° 
catch
ҐҐ 
(
ҐҐ 
	Exception
ҐҐ 
ex
ҐҐ 
)
ҐҐ  
{
££ 
throw
§§ 
new
§§ 
	Exception
§§ #
(
§§# $
ex
§§$ &
.
§§& '
Message
§§' .
)
§§. /
;
§§/ 0
}
•• 
}
¶¶ 	
private
®® 
static
®® 
void
®® 
Shuffle
®® #
<
®®# $
T
®®$ %
>
®®% &
(
®®& '
IList
®®' ,
<
®®, -
T
®®- .
>
®®. /
values
®®0 6
)
®®6 7
{
©© 	
var
™™ 
n
™™ 
=
™™ 
values
™™ 
.
™™ 
Count
™™  
;
™™  !
var
ЂЂ 
rnd
ЂЂ 
=
ЂЂ 
new
ЂЂ 
Random
ЂЂ  
(
ЂЂ  !
)
ЂЂ! "
;
ЂЂ" #
for
ђђ 
(
ђђ 
int
ђђ 
i
ђђ 
=
ђђ 
n
ђђ 
-
ђђ 
$num
ђђ 
;
ђђ 
i
ђђ  !
>
ђђ" #
$num
ђђ$ %
;
ђђ% &
i
ђђ' (
--
ђђ( *
)
ђђ* +
{
≠≠ 
var
ЃЃ 
j
ЃЃ 
=
ЃЃ 
rnd
ЃЃ 
.
ЃЃ 
Next
ЃЃ  
(
ЃЃ  !
$num
ЃЃ! "
,
ЃЃ" #
i
ЃЃ$ %
)
ЃЃ% &
;
ЃЃ& '
var
ѓѓ 
temp
ѓѓ 
=
ѓѓ 
values
ѓѓ !
[
ѓѓ! "
i
ѓѓ" #
]
ѓѓ# $
;
ѓѓ$ %
values
∞∞ 
[
∞∞ 
i
∞∞ 
]
∞∞ 
=
∞∞ 
values
∞∞ "
[
∞∞" #
j
∞∞# $
]
∞∞$ %
;
∞∞% &
values
±± 
[
±± 
j
±± 
]
±± 
=
±± 
temp
±±  
;
±±  !
}
≤≤ 
}
≥≥ 	
}
іі 
}µµ В
>C:\Users\ricar\Documents\GitHub\domino\DominoServer\Program.cs
	namespace 	
DominoServer
 
{ 
internal 
static 
class 
Program !
{ 
private 
static 
void 
Main  
(  !
)! "
{		 	
ServiceHost

 
host

 
=

 
new

 "
ServiceHost

# .
(

. /
typeof

/ 5
(

5 6
DominoService

6 C
)

C D
)

D E
;

E F
host 
. 
Open 
( 
) 
; 
Console 
. 
	WriteLine 
( 
$str 9
)9 :
;: ;
Console 
. 
ReadLine 
( 
) 
; 
host 
. 
Close 
( 
) 
; 
} 	
} 
} 