<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DominoServer</name>
    </assembly>
    <members>
        <member name="T:DominoServer.DominoService">
            <summary>
            This class represents the server logic, includes all the contracts needed to its correct functionallity.
            </summary>
        </member>
        <member name="M:DominoServer.DominoService.JoinCurrentGame(System.Int32,System.String)">
            <summary>
            This method adds the user to the specific game.
            </summary>
            <param name="idGame"> Game identifier. </param>
            <param name="username"> The user who is joining. </param>
        </member>
        <member name="M:DominoServer.DominoService.GetFirstSevenTiles(System.Int32)">
            <summary>
            This method distributes to each player their initial seven tiles.
            </summary>
            <param name="idGame"> Game identifier. </param>
        </member>
        <member name="M:DominoServer.DominoService.GetPlayersName(System.Int32)">
            <summary>
            This method sends each player the names of the members of the game.
            </summary>
            <param name="idGame"> Game identifier. </param>
        </member>
        <member name="M:DominoServer.DominoService.GetHighestTile(System.Int32,System.String)">
            <summary>
            This method asks each player for their highest tile so that the one with the highest tile has
            the first turn.
            </summary>
            <param name="idGame"> Game identifier. </param>
            <param name="hostHighestTile"> Host's highest tile. </param>
        </member>
        <member name="M:DominoServer.DominoService.PutATile(System.Int32,System.String,System.Boolean)">
            <summary>
            This method is invoked when the player who has the turn put a tile on the board.
            </summary>
            <param name="idGame"> Game identifier. </param>
            <param name="tile"> The tile put on the board. </param>
            <param name="decision"> A Boolean value that determines if the tile
            could be place in left and right side. </param>
        </member>
        <member name="M:DominoServer.DominoService.PassTurn(System.Int32)">
            <summary>
            This method is invoked when the player who has the turn can not do another action.
            </summary>
            <param name="idGame"></param>
        </member>
        <member name="M:DominoServer.DominoService.TakeFromTheBank(System.Int32)">
            <summary>
            This method is invoked when the player who has the turn take a tile from the bank.
            </summary>
            <param name="idGame"> Game identifier. </param>
        </member>
        <member name="M:DominoServer.DominoService.Win(System.Int32)">
            <summary>
            This method is invoked when the player who has the turn put his last tile in hand on
            the board.
            </summary>
            <param name="idGame"> Game identifier. </param>
        </member>
        <member name="M:DominoServer.DominoService.UploadPoints(System.Int32,System.Int32)">
            <summary>
            This method is invoked when at the end of the game and updates the points in the data
            base.
            </summary>
            <param name="idGame"></param>
            <param name="points"></param>
        </member>
        <member name="M:DominoServer.DominoService.JoinLobby(System.String)">
            <summary>
            This method is invoked when an user joins the lobby.
            </summary>
            <param name="username"> The user who joins. </param>
        </member>
        <member name="M:DominoServer.DominoService.GetGames">
            <summary>
            This method sends to the user all the games room in the server.
            </summary>
        </member>
        <member name="M:DominoServer.DominoService.CreateGame(System.String)">
            <summary>
            This method create a new game room.
            </summary>
            <param name="gameName"> The name of the new game room. </param>
        </member>
        <member name="M:DominoServer.DominoService.JoinGame(System.String)">
            <summary>
            This method is invoked when an user try to join to a room game.
            </summary>
            <param name="gameName"> The name of the game room. </param>
        </member>
        <member name="M:DominoServer.DominoService.BreakGame(System.String)">
            <summary>
            This method is invoked when the owner of the game room leaves the room
            expelling the other members in the room and deleting it.
            </summary>
            <param name="gameName"> The name of the game room. </param>
        </member>
        <member name="M:DominoServer.DominoService.MemberLeftGame(System.String)">
            <summary>
            This method take out an user from the game room.
            </summary>
            <param name="gameName"> The name of the game room. </param>
        </member>
        <member name="M:DominoServer.DominoService.KickPlayer(System.String,System.String)">
            <summary>
            This method is invoked when the owner of the game room expell another player.
            </summary>
            <param name="username"> The player who was expell.</param>
            <param name="gameName"> The name of the game room. </param>
        </member>
        <member name="M:DominoServer.DominoService.StartGame(System.String)">
            <summary>
            This method starts the game once the room is full and deletes the room.
            </summary>
            <param name="gameName"> The name of the game room. </param>
        </member>
        <member name="M:DominoServer.DominoService.JoinChat(System.Int32,System.String)">
            <summary>
            This method adds the user to a specific room chat.
            </summary>
            <param name="room"> The number of the room chat to join in. </param>
            <param name="username"> The user who is joining. </param>
        </member>
        <member name="M:DominoServer.DominoService.SendMessage(System.Int32,System.String)">
            <summary>
            This method sends a message from an user to the server.
            </summary>
            <param name="room"> The number of the room where the message was send. </param>
            <param name="message"> The incoming message. </param>
        </member>
        <member name="M:DominoServer.DominoService.ChangePassword(System.String,System.String,System.String)">
            <summary>
            This method allows the user change his current password.
            </summary>
            <param name="username"> The username of the user. </param>
            <param name="currentPassword"> The current password of the user in the database. </param>
            <param name="newPassword"> The new password of the user. </param>
            <returns> A Boolean value that represents if the operation was complete or not. </returns>
        </member>
        <member name="M:DominoServer.DominoService.GetScores">
            <summary>
            This method gets the five highest scores in the database.
            </summary>
            <returns> A collection of the users with the highest scores. </returns>
        </member>
        <member name="M:DominoServer.DominoService.RecoverPassword(System.String)">
            <summary>
            This method allows recover the password of a registered user through his email.
            </summary>
            <param name="email"> The email of the user. </param>
            <returns> A Boolean value that represents if the email exists in the data base. </returns>
        </member>
        <member name="M:DominoServer.DominoService.SignUp(System.String,System.String,System.String)">
            <summary>
            This method allows the registration of a new user in the database.
            </summary>
            <param name="username"> The username of the new user. </param>
            <param name="email"> The email of the new user. </param>
            <param name="password"> The password of the new user. </param>
            <returns> Username of the user. </returns>
        </member>
        <member name="M:DominoServer.DominoService.VerificateUser(System.String,System.String)">
            <summary>
            This method validates if the token send it by the user is the correct to verificate
            him in the data base.
            </summary>
            <param name="username"> The userneme of the user. </param>
            <param name="token"> The verification token. </param>
            <returns> A Boolean value that represents if the token was right or wrong. </returns>
        </member>
        <member name="M:DominoServer.DominoService.IsVerified(System.String)">
            <summary>
            This method checks if an user is already verified or not.
            </summary>
            <param name="username"> The username of the user. </param>
            <returns> A Boolean value that represents if the user is verified or not. </returns>
        </member>
        <member name="M:DominoServer.DominoService.LogIn(System.String,System.String)">
            <summary>
            This method validates that the login credentials of the user are correct.
            </summary>
            <param name="email"> Email of the user. </param>
            <param name="password"> Password of the user. </param>
            <returns> Username of the user. </returns>
        </member>
    </members>
</doc>
